from constraint import *

# Get data from file
def getData(filename):
    with open(filename, 'r') as f:
        data = f.read()
    # Extract colors value
    colors = int(data[data.find('colors = ') + len('colors = '):data.find('\n', data.find('colors = '))])
    # Extract list of number,number pairs
    pairs = [(int(x.split(',')[0]), int(x.split(',')[1])) for x in data.split('\n') if ',' in x and not x.startswith('#')]
    return [colors,pairs]

# Create CSP instance
def createCSP(colors, pairs):
    problem = Problem()
    nodes = set()
    # Add variables to the CSP
    for pair in pairs:
        nodes.add(pair[0])
        nodes.add(pair[1])
        problem.addVariable(pair[0], range(colors))
        problem.addVariable(pair[1], range(colors))
    # Add constraints to the CSP
    for pair in pairs:
        problem.addConstraint(lambda x, y: x != y, pair)
    return problem

# Get the solution of the CSP instance
def solveCSP(problem):
    solution = problem.getSolution()
    if solution is None:
        return None
    # Format the solution
    formatted_solution = {}
    for variable, value in solution.items():
        if value not in formatted_solution:
            formatted_solution[value] = []
        formatted_solution[value].append(variable)
    return formatted_solution

# Main function
def main():
    filename = 'input.txt'
    input = getData(filename)
    problem = createCSP(data[0], data[1])
    solution = solveCSP(problem)
    if solution is None:
        print('No solution found')
    else:
        for color, nodes in solution.items():
            print('Color {}: {}'.format(color, nodes))

if __name__ == '__main__':
    main()
